{
  "hash": "1e30e889c309a44034b4a73103511a31",
  "result": {
    "markdown": "---\ntitle: \"Missing covariate imputation\"\nexecute: \n  freeze: auto\n---\n\n\n\nIn this example, we use the `nhanes2` data set from the `mice` R-package to illustrate how to do missing covariate imputation in INLA by using a measurement error model.\n\n## Loading packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mice)       # Just used for the nhanes2 data set\nlibrary(INLA)       # INLA modelling\nlibrary(dplyr)      # Data wrangling of the results\nlibrary(gt)         # Tables\nlibrary(tidyverse)  # Data wrangling and plotting\nlibrary(showtext)   # Font\nlibrary(colorspace) # Color adjustments\n```\n:::\n\n\n## Loading and preparing the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Using the nhanes data set found in mice so we can compare to mice:\ndata(nhanes2)\n\nhead(nhanes2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    age  bmi  hyp chl\n1 20-39   NA <NA>  NA\n2 40-59 22.7   no 187\n3 20-39   NA   no 187\n4 60-99   NA <NA>  NA\n5 20-39 20.4   no 113\n6 60-99   NA <NA> 184\n```\n:::\n\n```{.r .cell-code}\nn <- nrow(nhanes2)\n\n# Manually dummy-code age:\nage2 <- ifelse(nhanes2$age == \"40-59\", 1, 0)\nage3 <- ifelse(nhanes2$age == \"60-99\", 1, 0)\n\n# Center the response and continuous covariates\nchl <- scale(nhanes2$chl, scale = FALSE)[,1]\nbmi <- scale(nhanes2$bmi, scale = FALSE)[,1]\n```\n:::\n\n\n## Modelling\n\nWe want to fit the model\n\n\n$$\nchl \\sim \\beta_0 + \\beta_1 age_2 + \\beta_2 age_3 + \\beta_3 bmi\n$$\n\nTODO: Coefficient names are not consistent\n\n### Specifying priors\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Priors for model of interest coefficients\nprior.beta = c(0, 1/1000) # N(0, 10^3)\n\n# Priors for exposure model coefficients\nprior.alpha <- c(0, 1/10000) # N(0, 10^4) \n\n# Priors for y, measurement error and true x-value precision\nprior.prec.y <- c(0.5, 0.5) # Gamma(0.5, 0.5)\nprior.prec.u_c <- c(0.5, 0.5) # Gamma(0.5, 0.5)\nprior.prec.x <- c(0.5, 0.5) # Gamma(0.5, 0.5) \n\n# Initial values\nprec.y <- 1\nprec.u_c <- 1\nprec.x <- 1\n```\n:::\n\n\n\n### Setting up the matrices for the joint model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nY <- matrix(NA, 3*n, 3)\n\n\nY[1:n, 1] <- chl             # Regression model of interest response\nY[n+(1:n), 2] <- bmi         # Error model response\nY[2*n+(1:n), 3] <- rep(0, n) # Exposure model response\n\nbeta.0 <- c(rep(1, n), rep(NA, n), rep(NA, n))\nbeta.x <- c(1:n, rep(NA, n), rep(NA, n))\nbeta.z2 <- c(age2, rep(NA, n), rep(NA, n))\nbeta.z3 <- c(age3, rep(NA, n), rep(NA, n))\n\nid.x <- c(rep(NA, n), 1:n, 1:n) \nweight.x <- c(rep(1, n), rep(1, n), rep(-1, n))\n\nalpha.0 <- c(rep(NA, n), rep(NA, n), rep(1, n))\nalpha.z2 <- c(rep(NA, n), rep(NA, n), age2)\nalpha.z3 <- c(rep(NA, n), rep(NA, n), age3)\n\ndd <- data.frame(Y = Y, \n                 beta.0 = beta.0,\n                 beta.x = beta.x,\n                 beta.z2 = beta.z2,\n                 beta.z3 = beta.z3,\n                 id.x = id.x,\n                 weight.x = weight.x,\n                 alpha.0 = alpha.0,\n                 alpha.z2 = alpha.z2,\n                 alpha.z3 = alpha.z3)\n```\n:::\n\n\n### INLA formula\n\n::: {.cell}\n\n```{.r .cell-code}\nformula = Y ~ - 1 + beta.0 + beta.z2 + beta.z3 + \n  f(beta.x, copy=\"id.x\", \n    hyper = list(beta = list(param = prior.beta, fixed=FALSE))) +\n  f(id.x, weight.x, model=\"iid\", values = 1:n, \n    hyper = list(prec = list(initial = -15, fixed=TRUE))) +\n  alpha.0 + alpha.z2 + alpha.z3\n```\n:::\n\n\n### Scaling of ME precision\n\nSince we are not assuming any measurement error here, we need to \"turn off\" the error model for the observations where the observation is not missing. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Scale the measurement error precision according to whether observations are missing or not (1 if missing, large if not missing)\nM <- ifelse(is.na(bmi), 10^12, 10^12)\n# Scaling the precision to be large for the error model (since we only have correctly observed or missing data, we want high precision for the correctly observed data and for the missing data it doesn't matter)\nScale <- c(rep(1, n), M, rep(1, n))\n```\n:::\n\n\n### Fitting the model\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_missing <- inla(formula, data = dd, scale = Scale,\n                     family = c(\"gaussian\", \"gaussian\", \"gaussian\"),\n                     control.family = list(\n                       list(hyper = list(prec = list(initial = log(prec.y), \n                                                     param = prior.prec.y, \n                                                     fixed = FALSE))),\n                       list(hyper = list(prec = list(initial = log(prec.u_c), \n                                                     param = prior.prec.u_c, \n                                                     fixed = TRUE))),\n                       list(hyper = list(prec = list(initial = log(prec.x), \n                                                     param = prior.prec.x, \n                                                     fixed = FALSE)))\n                     ),\n                     control.fixed = list(\n                       mean = list(beta.0 = prior.beta[1], \n                                   beta.z2 = prior.beta[1], \n                                   beta.z3 = prior.beta[1],  \n                                   alpha.0 = prior.alpha[1], \n                                   alpha.z2 = prior.alpha[1],\n                                   alpha.z3 = prior.alpha[1]), \n                       prec = list(beta.0 = prior.beta[2], \n                                   beta.z2 = prior.beta[2], \n                                   beta.z3 = prior.beta[2],  \n                                   alpha.0 = prior.alpha[2], \n                                   alpha.z2 = prior.alpha[2],\n                                   alpha.z3 = prior.alpha[2])),\n                     verbose=F)\nsummary(model_missing)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n   c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \n   \", \" data = data, quantiles = quantiles, E = E, offset = offset, \", \" \n   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \n   \", \" lp.scale = lp.scale, link.covariates = link.covariates, verbose = \n   verbose, \", \" lincomb = lincomb, selection = selection, control.compute \n   = control.compute, \", \" control.predictor = control.predictor, \n   control.family = control.family, \", \" control.inla = control.inla, \n   control.fixed = control.fixed, \", \" control.mode = control.mode, \n   control.expert = control.expert, \", \" control.hazard = control.hazard, \n   control.lincomb = control.lincomb, \", \" control.update = \n   control.update, control.lp.scale = control.lp.scale, \", \" \n   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, \n   \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = \n   num.threads, \", \" blas.num.threads = blas.num.threads, keep = keep, \n   working.directory = working.directory, \", \" silent = silent, inla.mode \n   = inla.mode, safe = FALSE, debug = debug, \", \" .parent.frame = \n   .parent.frame)\") \nTime used:\n    Pre = 3.24, Running = 0.26, Post = 0.0301, Total = 3.53 \nFixed effects:\n            mean     sd 0.025quant 0.5quant 0.975quant mode kld\nbeta.0   -16.997 10.972    -37.609  -17.355      5.620   NA   0\nbeta.z2   28.042 16.377     -5.619   28.547     58.884   NA   0\nbeta.z3   47.065 20.019      5.858   47.746     84.475   NA   0\nalpha.0    1.845  1.591     -1.314    1.845      5.009   NA   0\nalpha.z2  -2.987  2.492     -7.941   -2.986      1.964   NA   0\nalpha.z3  -3.999  2.629     -9.254   -3.986      1.188   NA   0\n\nRandom effects:\n  Name\t  Model\n    id.x IID model\n   beta.x Copy\n\nModel hyperparameters:\n                                            mean    sd 0.025quant 0.5quant\nPrecision for the Gaussian observations    0.001 0.000      0.000    0.001\nPrecision for the Gaussian observations[3] 0.069 0.037      0.024    0.060\nBeta for beta.x                            4.475 1.117      2.383    4.434\n                                           0.975quant mode\nPrecision for the Gaussian observations         0.002   NA\nPrecision for the Gaussian observations[3]      0.164   NA\nBeta for beta.x                                 6.776   NA\n\nMarginal log-Likelihood:  -353.90 \n is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save results:\nsaveRDS(model_missing, file = \"results/model_missing.rds\")\n```\n:::\n\n\n### Fitting a complete case model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Where is bmi missing? \nmissing_bmi <- is.na(bmi)\n\ndd_naive <- data.frame(Y = chl, \n                       beta.0 = rep(1, length(bmi)),\n                       beta.x = bmi, \n                       beta.z2 = age2, \n                       beta.z3 = age3)[!missing_bmi, ]\n\n\n# Priors for model of interest coefficients\nprior.beta <- c(0, 1/1000) # N(0, 10^3)\n\n# Formula\nformula <- Y ~ - 1 + beta.0 + beta.z2 + beta.z3 + beta.x\n\n# Fit model\nmodel_naive <- inla(formula,\n              data = dd_naive,\n              family = c(\"gaussian\"),\n              control.family = list(\n                list(hyper = list(prec = list(initial = log(1), \n                                              param = c(0.5, 0.5), # Gamma(0.5, 0.5) \n                                              fixed = FALSE)))),\n              control.fixed = list(\n                       mean = list(beta.0 = prior.beta[1], \n                                   beta.z2 = prior.beta[1], \n                                   beta.z3 = prior.beta[1],\n                                   beta.x = prior.beta[1]), \n                       prec = list(beta.0 = prior.beta[2], \n                                   beta.z2 = prior.beta[2], \n                                   beta.z3 = prior.beta[2],  \n                                   beta.x = prior.beta[2])),\n)\n\nsummary(model_naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n   c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \n   \", \" data = data, quantiles = quantiles, E = E, offset = offset, \", \" \n   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \n   \", \" lp.scale = lp.scale, link.covariates = link.covariates, verbose = \n   verbose, \", \" lincomb = lincomb, selection = selection, control.compute \n   = control.compute, \", \" control.predictor = control.predictor, \n   control.family = control.family, \", \" control.inla = control.inla, \n   control.fixed = control.fixed, \", \" control.mode = control.mode, \n   control.expert = control.expert, \", \" control.hazard = control.hazard, \n   control.lincomb = control.lincomb, \", \" control.update = \n   control.update, control.lp.scale = control.lp.scale, \", \" \n   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, \n   \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = \n   num.threads, \", \" blas.num.threads = blas.num.threads, keep = keep, \n   working.directory = working.directory, \", \" silent = silent, inla.mode \n   = inla.mode, safe = FALSE, debug = debug, \", \" .parent.frame = \n   .parent.frame)\") \nTime used:\n    Pre = 2.6, Running = 0.183, Post = 0.0209, Total = 2.81 \nFixed effects:\n           mean     sd 0.025quant 0.5quant 0.975quant mode kld\nbeta.0  -15.555 12.920    -38.970  -16.306     12.031   NA   0\nbeta.z2  26.658 18.579    -12.619   27.618     60.638   NA   0\nbeta.z3  50.259 24.548     -1.630   51.659     94.563   NA   0\nbeta.x    5.354  2.422      0.269    5.438      9.962   NA   0\n\nModel hyperparameters:\n                                         mean    sd 0.025quant 0.5quant\nPrecision for the Gaussian observations 0.001 0.001       0.00    0.001\n                                        0.975quant mode\nPrecision for the Gaussian observations      0.002   NA\n\nMarginal log-Likelihood:  -74.05 \n is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n```\n:::\n:::\n\n\n\n\n## Results\n\nThe posterior means and standard deviations are presented in the table below.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"vyillmvnjr\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#vyillmvnjr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vyillmvnjr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vyillmvnjr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vyillmvnjr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vyillmvnjr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vyillmvnjr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vyillmvnjr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vyillmvnjr .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vyillmvnjr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vyillmvnjr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vyillmvnjr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vyillmvnjr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vyillmvnjr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vyillmvnjr .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vyillmvnjr .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vyillmvnjr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vyillmvnjr .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vyillmvnjr .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vyillmvnjr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vyillmvnjr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vyillmvnjr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vyillmvnjr .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vyillmvnjr .gt_left {\n  text-align: left;\n}\n\n#vyillmvnjr .gt_center {\n  text-align: center;\n}\n\n#vyillmvnjr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vyillmvnjr .gt_font_normal {\n  font-weight: normal;\n}\n\n#vyillmvnjr .gt_font_bold {\n  font-weight: bold;\n}\n\n#vyillmvnjr .gt_font_italic {\n  font-style: italic;\n}\n\n#vyillmvnjr .gt_super {\n  font-size: 65%;\n}\n\n#vyillmvnjr .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#vyillmvnjr .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vyillmvnjr .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vyillmvnjr .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vyillmvnjr .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vyillmvnjr .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vyillmvnjr .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\">\n        <span class=\"gt_column_spanner\">me_adjusted</span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\">\n        <span class=\"gt_column_spanner\">naive</span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\">\n        <span class=\"gt_column_spanner\">inla_mcmc</span>\n      </th>\n    </tr>\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">sd</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">sd</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">sd</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"7\" class=\"gt_group_heading\">Model of interest</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th scope=\"row\" class=\"gt_row gt_left gt_stub\">beta.0</th>\n<td class=\"gt_row gt_right\">-16.997</td>\n<td class=\"gt_row gt_right\">10.972</td>\n<td class=\"gt_row gt_right\">-15.555</td>\n<td class=\"gt_row gt_right\">12.920</td>\n<td class=\"gt_row gt_right\">43.469</td>\n<td class=\"gt_row gt_right\">62.603</td></tr>\n    <tr><th scope=\"row\" class=\"gt_row gt_left gt_stub\">beta.z2</th>\n<td class=\"gt_row gt_right\">28.042</td>\n<td class=\"gt_row gt_right\">16.377</td>\n<td class=\"gt_row gt_right\">26.658</td>\n<td class=\"gt_row gt_right\">18.579</td>\n<td class=\"gt_row gt_right\">29.501</td>\n<td class=\"gt_row gt_right\">17.871</td></tr>\n    <tr><th scope=\"row\" class=\"gt_row gt_left gt_stub\">beta.z3</th>\n<td class=\"gt_row gt_right\">47.065</td>\n<td class=\"gt_row gt_right\">20.019</td>\n<td class=\"gt_row gt_right\">50.259</td>\n<td class=\"gt_row gt_right\">24.548</td>\n<td class=\"gt_row gt_right\">49.449</td>\n<td class=\"gt_row gt_right\">23.207</td></tr>\n    <tr><th scope=\"row\" class=\"gt_row gt_left gt_stub\">Beta for beta.x</th>\n<td class=\"gt_row gt_right\">4.475</td>\n<td class=\"gt_row gt_right\">1.117</td>\n<td class=\"gt_row gt_right\">5.354</td>\n<td class=\"gt_row gt_right\">2.422</td>\n<td class=\"gt_row gt_right\">4.864</td>\n<td class=\"gt_row gt_right\">2.206</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"7\" class=\"gt_group_heading\">Imputation model</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th scope=\"row\" class=\"gt_row gt_left gt_stub\">alpha.0</th>\n<td class=\"gt_row gt_right\">1.845</td>\n<td class=\"gt_row gt_right\">1.591</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><th scope=\"row\" class=\"gt_row gt_left gt_stub\">alpha.z2</th>\n<td class=\"gt_row gt_right\">-2.987</td>\n<td class=\"gt_row gt_right\">2.492</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><th scope=\"row\" class=\"gt_row gt_left gt_stub\">alpha.z3</th>\n<td class=\"gt_row gt_right\">-3.999</td>\n<td class=\"gt_row gt_right\">2.629</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n\nhttps://stefvanbuuren.name/RECAPworkshop/Practicals/RECAP_Practical_II.html \n\n\n\n\n\n::: {.cell fig.showtext='true'}\n\n```{.r .cell-code}\nme_plot <- return_estimates(model_missing) %>% \n  select(coefficient.name, mean, sd, model) \nnaive_plot <- naive_results %>% rename(sd = naive.sd, mean = naive.mean)\ninla_mcmc_plot <- inla_mcmc_results %>% rename(sd = inla_mcmc.sd, mean = inla_mcmc.mean)\n\nall_models_for_plot <- bind_rows(\"me\" = me_plot, \n                                 \"naive\" = naive_plot, \n                                 \"inla_mcmc\" = inla_mcmc_plot, \n                                 .id = \"model\") %>% \n  mutate(coef_name = recode_factor(coefficient.name, \"Beta for beta.x\" = \"beta.x\")) %>%\n  tidyr::separate(coef_name, c(\"sub_model\", \"coef_name\")) %>% \n  mutate(coef_pretty = paste0(sub_model, \"[\", coef_name, \"]\")) %>% \n  mutate(model = recode(model, \"me\" = \"ME model\", \"naive\" = \"Complete case analysis\", \"inla_mcmc\" = \"Goméz-Rubio & Rue (2018)\")) %>% \n  mutate(coef_pretty = fct_relevel(coef_pretty, levels = c(\"beta[0]\", \"beta[z2]\", \"beta[z3]\", \"beta[x]\", \"alpha[0]\", \"alpha[z2]\", \"alpha[z3]\")))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Outer names are only allowed for unnamed scalar atomic inputs\n```\n:::\n\n```{.r .cell-code}\n# Colors\ncol_bgr <- \"white\" #\"#fbf9f4\"\ncol_text <- \"#191919\"\n\n# Loading fonts\nf1 <- \"Open Sans\"\nf2 <- \"Open Sans\"\nfont_add_google(name = f1, family = f1)\nfont_add_google(name = f2, family = f2)\n\n# Plot theme\ntheme_model_summary <- theme_minimal(base_size = 18, base_family = \"Open Sans\") + \n  theme(\n  axis.title.y = element_blank(),\n  axis.title.x = element_text(size = 12),\n  axis.text = element_text(size = 10, color = col_text),\n  #axis.text.x = element_blank(),\n  axis.ticks = element_blank(),\n  legend.title = element_blank(),\n  legend.text = element_text(size = 10),\n  panel.background = element_rect(fill = col_bgr, color = col_bgr),\n  #plot.background = element_rect(fill = col_bgr, color = \"grey75\", size = 1),\n  legend.position = \"none\",\n  strip.placement = \"outside\",\n  strip.text = element_text(color = col_text),\n  panel.grid.major.y = element_blank(),\n  panel.grid.minor = element_blank(),\n  plot.title.position = \"plot\",\n  axis.line.x = element_line(size = 1, color = \"grey65\"),\n  plot.margin = margin(rep(15, 4))\n)\n\nggplot(all_models_for_plot, aes(y = model)) +\n  geom_linerange(aes(xmin = mean-sd, xmax = mean+sd, color = model), size = 1) +\n  geom_point(aes(x = mean, color = model), size = 3) +\n  #scale_x_continuous(limits = c(-30, 90), breaks = seq(-30, 90, by = 30)) +\n  scale_color_manual(values = darken(ggthemes::canva_palettes$\"Subtle and versatile\"[c(3, 1, 4)], 0.4), \n                     guide = guide_legend(override.aes = list(size = 2, alpha = 1))) +\n  facet_wrap(vars(coef_pretty), nrow = 2, switch = \"x\",\n             labeller = label_parsed, scales = \"free_x\"\n             ) +\n  labs(x = \"Posterior mean\") +\n  coord_cartesian(clip = \"off\") +\n  theme_model_summary\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'switch' is deprecated.\nUse 'strip.position' instead.\nSee help(\"Deprecated\")\n```\n:::\n\n::: {.cell-output-display}\n![](missing_covariate_imputation_files/figure-html/visualize results-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"../PhDEmma/PaperA_ME_and_missing_data/figures/missing_figure.png\", width = 7, height = 5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::purl(\"missing_covariate_imputation.qmd\")\n```\n:::\n",
    "supporting": [
      "missing_covariate_imputation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}