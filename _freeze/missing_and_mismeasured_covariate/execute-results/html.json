{
  "hash": "9985820fc0ff2413cfb29fd46e9ffefa",
  "result": {
    "markdown": "---\ntitle: \"Missing and mismeasured covariate\"\nexecute: \n  freeze: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n# Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survival)\nlibrary(flexsurv)\nlibrary(boot)\nlibrary(MASS)\nlibrary(rjags)\nlibrary(INLA)\n```\n:::\n\n\n\n# Setting up the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load data   ==================================================================\nmydata <- read.csv(\"data/bloodpressure.csv\")\nhead(mydata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  X sbp1 sbp2 sex  age smoke diabetes d         t\n1 1   NA   NA   0 -0.3    NA        0 0 20.833336\n2 2  1.8   NA   0  1.2    NA        1 0  3.250000\n3 3  0.5   NA   0 -0.4    NA        1 0 20.416664\n4 4   NA   NA   1  0.0     1        0 0  4.083336\n5 5  0.5   NA   1 -0.7     1        0 0 12.000000\n6 6 -0.1   NA   1 -1.0     1        0 0 21.166664\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create complete-case data set  ===============================================\n\n# For the naive analysis, only the observations that have both sbp1 measurement\n# and smoking status registered are used.\nccaData <- subset(mydata, (is.na(sbp1)==FALSE) & (is.na(smoke)==FALSE))\nn <- dim(ccaData)[1]\n\nhead(ccaData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    X sbp1 sbp2 sex  age smoke diabetes d        t\n5   5  0.5   NA   1 -0.7     1        0 0 12.00000\n6   6 -0.1   NA   1 -1.0     1        0 0 21.16666\n10 10  1.9   NA   1  2.0     0        0 0  3.25000\n13 13  1.1  0.3   1  0.2     0        0 0 13.66666\n15 15  0.8   NA   1  1.4     0        0 0  2.75000\n16 16 -0.6   NA   1 -0.1     0        0 0  2.50000\n```\n:::\n\n```{.r .cell-code}\n# sbp1 sbp2 sex  age smoke diabetes d        t\n# 5   0.5   NA   1 -0.7     1        0 0 12.00000\n# 6  -0.1   NA   1 -1.0     1        0 0 21.16666\n# 10  1.9   NA   1  2.0     0        0 0  3.25000\n# 13  1.1  0.3   1  0.2     0        0 0 13.66666\n# 15  0.8   NA   1  1.4     0        0 0  2.75000\n# 16 -0.6   NA   1 -0.1     0        0 0  2.50000\n\n\n# Function to view relevant INLA coefficient estimates =========================\nview_relevant <- function(INLA_res, model_name){\n  summ <- summary(INLA_res)\n  fixed <- summ$fixed[2:5,1:6]\n  beta.x <- summ$hyperpar[nrow(summ$hyperpar), ]\n  cat(model_name, \"\\n\")\n  rbind(beta.x, fixed)\n}\n```\n:::\n\n\n# Naive Bayesian analysis using INLA\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note: JAGS and INLA use the same Weibull parameterization\n# (provided \"variant\" = 0 in INLA)\n\nformula.naive <- inla.surv(t/10, d) ~ sbp1 + sex + age + smoke + diabetes\n\nmodel_naive <- inla(formula.naive,\n                     family =\"weibullsurv\",\n                     data=ccaData,\n                     control.family = list(list(variant = 0)))\n\nsummary(model_naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n   c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \n   \", \" data = data, quantiles = quantiles, E = E, offset = offset, \", \" \n   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \n   \", \" lp.scale = lp.scale, link.covariates = link.covariates, verbose = \n   verbose, \", \" lincomb = lincomb, selection = selection, control.compute \n   = control.compute, \", \" control.predictor = control.predictor, \n   control.family = control.family, \", \" control.inla = control.inla, \n   control.fixed = control.fixed, \", \" control.mode = control.mode, \n   control.expert = control.expert, \", \" control.hazard = control.hazard, \n   control.lincomb = control.lincomb, \", \" control.update = \n   control.update, control.lp.scale = control.lp.scale, \", \" \n   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, \n   \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = \n   num.threads, \", \" blas.num.threads = blas.num.threads, keep = keep, \n   working.directory = working.directory, \", \" silent = silent, inla.mode \n   = inla.mode, safe = FALSE, debug = debug, \", \" .parent.frame = \n   .parent.frame)\") \nTime used:\n    Pre = 3.39, Running = 1.19, Post = 0.046, Total = 4.63 \nFixed effects:\n              mean    sd 0.025quant 0.5quant 0.975quant mode kld\n(Intercept) -2.361 0.095     -2.550   -2.360     -2.179   NA   0\nsbp1         0.085 0.036      0.013    0.085      0.156   NA   0\nsex          0.487 0.095      0.303    0.486      0.676   NA   0\nage          0.876 0.058      0.763    0.876      0.989   NA   0\nsmoke        0.262 0.100      0.064    0.263      0.455   NA   0\ndiabetes     0.503 0.112      0.280    0.505      0.718   NA   0\n\nModel hyperparameters:\n                                mean    sd 0.025quant 0.5quant 0.975quant mode\nalpha parameter for weibullsurv 1.42 0.052       1.32     1.42       1.52   NA\n\nMarginal log-Likelihood:  -1385.54 \n is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n# Measurement error models (in INLA)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Estimating sigma_u\nW <- ccaData[,1:2]\nW_mean <- rowMeans(ccaData[,1:2], na.rm = TRUE)\nsigma_uu <- 0\nfor(i in 1:n){\n  k <- sum(!is.na(W[i,])) # count number of repeats (1 or 2)\n  for(j in 1:k){\n    sigma_uu <- sigma_uu + (W[i,j] - W_mean[i])^2\n  }\n}\nsigma_uu <- sigma_uu/sum(is.na(W$sbp2))\n\n# Alternative calculation\nsigma_uu_alt <- (sum((ccaData$sbp1-W_mean)^2) +\n                   sum((ccaData$sbp2-W_mean)^2, na.rm = TRUE)) / sum(is.na(ccaData$sbp2))\n```\n:::\n\n\n# Specifying priors (used in both ME models)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Priors for measurement error variance and true x-value\nprior.prec.u <- c(0.5, 0.5) # Gamma(0.5, 0.5) (same as Keogh&Bartlett)\nprior.prec.x <- c(0.5, 0.5) # Gamma(0.5, 0.5) (same as K&B)\n#prec.u = 1/sigma_uu\nprec.u <- 2.8\nprec.x = 1\n\n#curve(dgamma(x, shape = 0.5, rate = 0.5))\n\n# Priors for exposure model coefficients\nprior.alpha <- c(0, 1/10000) # N(0, 10^4) (same as K&B)\n\n# Priors for model of interest coefficients\nprior.beta = c(0, 1/1000) # This has a Gaussian prior\n# (K&B specify prior -beta/r ~ N(0,10^6). Since r has prior Exp(0.001),\n# the expected value of r is 1000, and so if we fix this,\n# we can use prior beta ~ N(0, 1000).)\n\n# Prior for shape parameter of the Weibull survival model\nprior.exp <- 0.01 # Exp(0.001) (INLA sets prior on theta, r~Exp(0.1*theta))\nexp.init <- 1.4\n```\n:::\n\n\n# ME model using single measurement\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specifying Y object\nsurv.time <- c(ccaData$t, rep(NA, 2*n))\nevent <- c(ccaData$d, rep(NA, 2*n))\nY.surv <- inla.surv(surv.time/10, event) # Divide by 10 because of numerical issues otherwise.\nY.expos.sbp <- c(rep(NA, n), rep(0, n), rep(NA, n))\nY.err.sbp <- c(rep(NA, 2*n), ccaData$sbp1) # Use only first measurement from complete case data\nY <- list(Y.surv, Y.expos.sbp, Y.err.sbp)\n\nbeta.0 <- c(rep(1, n), rep(NA, 2*n))\nbeta.sbp <- c(1:n, rep(NA, 2*n))\nbeta.sex <- c(ccaData$sex, rep(NA, 2*n))\nbeta.age <- c(ccaData$age, rep(NA, 2*n))\nbeta.smoke <- c(ccaData$smoke, rep(NA, 2*n))\nbeta.diabetes <- c(ccaData$diabetes, rep(NA, 2*n))\n\nbeta.sbp.copy <- c(rep(NA, n), 1:n, 1:n)\nweight.sbp <- c(rep(NA, n), rep(-1, n), rep(1, n))\n\nalpha.0 <- c(rep(NA, n), rep(1, n), rep(NA, n))\nalpha.sex <- c(rep(NA, n), ccaData$sex, rep(NA, n))\nalpha.age <- c(rep(NA, n), ccaData$age, rep(NA, n))\nalpha.smoke <- c(rep(NA, n), ccaData$smoke, rep(NA, n))\nalpha.diabetes <- c(rep(NA, n), ccaData$diabetes, rep(NA, n))\n\ndd <- list(Y = Y,\n           beta.0 = beta.0,\n           beta.sbp = beta.sbp,\n           beta.sex = beta.sex,\n           beta.age = beta.age,\n           beta.smoke = beta.smoke,\n           beta.diabetes = beta.diabetes,\n           beta.sbp.copy = beta.sbp.copy,\n           weight.sbp = weight.sbp,\n           alpha.0 = alpha.0,\n           alpha.sex = alpha.sex,\n           alpha.age = alpha.age,\n           alpha.smoke = alpha.smoke,\n           alpha.diabetes = alpha.diabetes)\n\n# INLA formula with copy option\nformula = Y ~ beta.0 - 1 +\n  f(beta.sbp.copy, weight.sbp, model=\"iid\", values = 1:n,\n    hyper = list(prec = list(initial = -15, fixed=TRUE))) +\n  f(beta.sbp, copy=\"beta.sbp.copy\",\n    hyper = list(beta = list(param = prior.beta, fixed=FALSE))) +\n  beta.sex + beta.age + beta.smoke + beta.diabetes +\n  alpha.0 + alpha.sex + alpha.age + alpha.smoke + alpha.diabetes\n\nmodel_bloodpressure0 <- inla(formula, data = dd,\n                 family = c(\"weibullsurv\", \"gaussian\", \"gaussian\"),\n                 control.family = list(\n                   list(hyper = list(alpha = list(param = prior.exp,\n                                                  initial = log(exp.init),\n                                                  fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.x),\n                                                 param = prior.prec.x,\n                                                 fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.u),\n                                                 param = prior.prec.u,\n                                                 fixed = TRUE)))\n                 ),\n                 control.predictor = list(compute = TRUE), #compute pred. dist. of the missing obs in the response\n                 control.fixed = list(\n                   mean = list(beta.0 = prior.beta[1],\n                               beta.sex = prior.beta[1],\n                               beta.age = prior.beta[1],\n                               beta.smoke = prior.beta[1],\n                               beta.diabetes = prior.beta[1],\n                               alpha.0 = prior.alpha[1],\n                               alpha.sex = prior.alpha[1],\n                               alpha.age = prior.alpha[1],\n                               alpha.smoke = prior.alpha[1],\n                               alpha.diabetes = prior.alpha[1]),\n                   prec = list(beta.0 = prior.beta[2],\n                               beta.sex = prior.beta[2],\n                               beta.age = prior.beta[2],\n                               beta.smoke = prior.beta[2],\n                               beta.diabetes = prior.beta[2],\n                               alpha.0 = prior.alpha[2],\n                               alpha.sex = prior.alpha[2],\n                               alpha.age = prior.alpha[2],\n                               alpha.smoke = prior.alpha[2],\n                               alpha.diabetes = prior.alpha[2])),\n                 verbose=F)\nsummary(model_bloodpressure0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n   c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \n   \", \" data = data, quantiles = quantiles, E = E, offset = offset, \", \" \n   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \n   \", \" lp.scale = lp.scale, link.covariates = link.covariates, verbose = \n   verbose, \", \" lincomb = lincomb, selection = selection, control.compute \n   = control.compute, \", \" control.predictor = control.predictor, \n   control.family = control.family, \", \" control.inla = control.inla, \n   control.fixed = control.fixed, \", \" control.mode = control.mode, \n   control.expert = control.expert, \", \" control.hazard = control.hazard, \n   control.lincomb = control.lincomb, \", \" control.update = \n   control.update, control.lp.scale = control.lp.scale, \", \" \n   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, \n   \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = \n   num.threads, \", \" blas.num.threads = blas.num.threads, keep = keep, \n   working.directory = working.directory, \", \" silent = silent, inla.mode \n   = inla.mode, safe = FALSE, debug = debug, \", \" .parent.frame = \n   .parent.frame)\") \nTime used:\n    Pre = 3.78, Running = 4.83, Post = 0.126, Total = 8.74 \nFixed effects:\n                 mean    sd 0.025quant 0.5quant 0.975quant mode kld\nbeta.0         -2.368 0.095     -2.557   -2.366     -2.185   NA   0\nbeta.sex        0.490 0.095      0.306    0.490      0.679   NA   0\nbeta.age        0.870 0.059      0.755    0.870      0.985   NA   0\nbeta.smoke      0.263 0.100      0.066    0.264      0.457   NA   0\nbeta.diabetes   0.501 0.112      0.277    0.502      0.715   NA   0\nalpha.0         0.017 0.044     -0.068    0.017      0.103   NA   0\nalpha.sex      -0.065 0.048     -0.158   -0.065      0.029   NA   0\nalpha.age       0.316 0.030      0.257    0.316      0.374   NA   0\nalpha.smoke    -0.002 0.051     -0.103   -0.002      0.099   NA   0\nalpha.diabetes  0.140 0.063      0.017    0.140      0.264   NA   0\n\nRandom effects:\n  Name\t  Model\n    beta.sbp.copy IID model\n   beta.sbp Copy\n\nModel hyperparameters:\n                                            mean    sd 0.025quant 0.5quant\nalpha parameter for weibullsurv            1.427 0.052      1.329    1.425\nPrecision for the Gaussian observations[2] 1.018 0.038      0.945    1.017\nBeta for beta.sbp                          0.115 0.049      0.018    0.115\n                                           0.975quant mode\nalpha parameter for weibullsurv                 1.534   NA\nPrecision for the Gaussian observations[2]      1.095   NA\nBeta for beta.sbp                               0.213   NA\n\nMarginal log-Likelihood:  -28061.24 \n is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n```\n:::\n\n```{.r .cell-code}\nview_relevant(model_bloodpressure0, model_name = \"Single measurement\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSingle measurement \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mean    sd 0.025quant 0.5quant 0.975quant mode\nBeta for beta.sbp 0.115 0.049      0.018    0.115      0.213   NA\nbeta.sex          0.490 0.095      0.306    0.490      0.679   NA\nbeta.age          0.870 0.059      0.755    0.870      0.985   NA\nbeta.smoke        0.263 0.100      0.066    0.264      0.457   NA\nbeta.diabetes     0.501 0.112      0.277    0.502      0.715   NA\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n# ME model using repeated measurements\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specifying Y object\nsurv.time <- c(ccaData$t, rep(NA, 3*n))\nevent <- c(ccaData$d, rep(NA, 3*n))\nY.surv <- inla.surv(surv.time/10, event)\nY.expos.sbp <- c(rep(NA, n), rep(0, n), rep(NA, 2*n))\nY.err.sbp <- c(rep(NA, 2*n), ccaData$sbp1, ccaData$sbp2) # Use both measurements from complete case data\nY <- list(Y.surv, Y.expos.sbp, Y.err.sbp)\n\nbeta.0 <- c(rep(1, n), rep(NA, 3*n))\nbeta.sbp <- c(1:n, rep(NA, 3*n))\nbeta.sex <- c(ccaData$sex, rep(NA, 3*n))\nbeta.age <- c(ccaData$age, rep(NA, 3*n))\nbeta.smoke <- c(ccaData$smoke, rep(NA, 3*n))\nbeta.diabetes <- c(ccaData$diabetes, rep(NA, 3*n))\n\n# Insert NAs in last model where w is NA\ntt <- 1:n\ntt[is.na(ccaData$sbp2)] <- NA\nbeta.sbp.copy <- c(rep(NA, n), 1:n, 1:n, tt)\nweight.sbp <- c(rep(NA, n), rep(-1, n), rep(1, 2*n))\n\nalpha.0 <- c(rep(NA, n), rep(1, n), rep(NA, 2*n))\nalpha.sex <- c(rep(NA, n), ccaData$sex, rep(NA, 2*n))\nalpha.age <- c(rep(NA, n), ccaData$age, rep(NA, 2*n))\nalpha.smoke <- c(rep(NA, n), ccaData$smoke, rep(NA, 2*n))\nalpha.diabetes <- c(rep(NA, n), ccaData$diabetes, rep(NA, 2*n))\n\n#Scale <- c(rep(1, 4*n) )\n\ndd <- list(Y = Y,\n           beta.0 = beta.0,\n           beta.sbp = beta.sbp,\n           beta.sex = beta.sex,\n           beta.age = beta.age,\n           beta.smoke = beta.smoke,\n           beta.diabetes = beta.diabetes,\n           beta.sbp.copy = beta.sbp.copy,\n           weight.sbp = weight.sbp,\n           alpha.0 = alpha.0,\n           alpha.sex = alpha.sex,\n           alpha.age = alpha.age,\n           alpha.smoke = alpha.smoke,\n           alpha.diabetes = alpha.diabetes#,\n           #Scale = Scale\n           )\n\n# INLA formula with copy option\nformula = Y ~ beta.0 - 1 +\n  f(beta.sbp.copy, weight.sbp, model=\"iid\", values = 1:n,\n    hyper = list(prec = list(initial = -15, fixed=TRUE))) +\n  f(beta.sbp, copy=\"beta.sbp.copy\",\n    hyper = list(beta = list(param = prior.beta, fixed=FALSE))) +\n  beta.sex + beta.age + beta.smoke + beta.diabetes +\n  alpha.0 + alpha.sex + alpha.age + alpha.smoke + alpha.diabetes\n\nmodel_bloodpressure1 <- inla(formula, data = dd,\n                 family = c(\"weibullsurv\", \"gaussian\", \"gaussian\"),\n                 control.family = list(\n                   list(hyper = list(alpha = list(param = prior.exp,\n                                                  initial = log(exp.init),\n                                                  fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.x),\n                                                 param = prior.prec.x,\n                                                 fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.u),\n                                                 param = prior.prec.u,\n                                                 fixed = FALSE)))\n                 ),\n                 control.predictor=list(link=3),\n                 #scale = Scale,\n                 control.fixed = list(\n                   mean = list(beta.0 = prior.beta[1],\n                               beta.sex = prior.beta[1],\n                               beta.age = prior.beta[1],\n                               beta.smoke = prior.beta[1],\n                               beta.diabetes = prior.beta[1],\n                               alpha.0 = prior.alpha[1],\n                               alpha.sex = prior.alpha[1],\n                               alpha.age = prior.alpha[1],\n                               alpha.smoke = prior.alpha[1],\n                               alpha.diabetes = prior.alpha[1]),\n                   prec = list(beta.0 = prior.beta[2],\n                               beta.sex = prior.beta[2],\n                               beta.age = prior.beta[2],\n                               beta.smoke = prior.beta[2],\n                               beta.diabetes = prior.beta[2],\n                               alpha.0 = prior.alpha[2],\n                               alpha.sex = prior.alpha[2],\n                               alpha.age = prior.alpha[2],\n                               alpha.smoke = prior.alpha[2],\n                               alpha.diabetes = prior.alpha[2])),\n                 verbose=F)\nsummary(model_bloodpressure1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n   c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \n   \", \" data = data, quantiles = quantiles, E = E, offset = offset, \", \" \n   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \n   \", \" lp.scale = lp.scale, link.covariates = link.covariates, verbose = \n   verbose, \", \" lincomb = lincomb, selection = selection, control.compute \n   = control.compute, \", \" control.predictor = control.predictor, \n   control.family = control.family, \", \" control.inla = control.inla, \n   control.fixed = control.fixed, \", \" control.mode = control.mode, \n   control.expert = control.expert, \", \" control.hazard = control.hazard, \n   control.lincomb = control.lincomb, \", \" control.update = \n   control.update, control.lp.scale = control.lp.scale, \", \" \n   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, \n   \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = \n   num.threads, \", \" blas.num.threads = blas.num.threads, keep = keep, \n   working.directory = working.directory, \", \" silent = silent, inla.mode \n   = inla.mode, safe = FALSE, debug = debug, \", \" .parent.frame = \n   .parent.frame)\") \nTime used:\n    Pre = 3.76, Running = 8.51, Post = 0.282, Total = 12.6 \nFixed effects:\n                 mean    sd 0.025quant 0.5quant 0.975quant mode kld\nbeta.0         -2.367 0.095     -2.557   -2.366     -2.184   NA   0\nbeta.sex        0.490 0.095      0.306    0.489      0.679   NA   0\nbeta.age        0.871 0.059      0.755    0.871      0.986   NA   0\nbeta.smoke      0.263 0.100      0.065    0.264      0.456   NA   0\nbeta.diabetes   0.502 0.112      0.278    0.503      0.716   NA   0\nalpha.0         0.006 0.043     -0.079    0.006      0.091   NA   0\nalpha.sex      -0.061 0.047     -0.154   -0.061      0.031   NA   0\nalpha.age       0.321 0.030      0.263    0.321      0.379   NA   0\nalpha.smoke     0.002 0.051     -0.098    0.002      0.101   NA   0\nalpha.diabetes  0.134 0.062      0.012    0.134      0.256   NA   0\n\nRandom effects:\n  Name\t  Model\n    beta.sbp.copy IID model\n   beta.sbp Copy\n\nModel hyperparameters:\n                                            mean    sd 0.025quant 0.5quant\nalpha parameter for weibullsurv            1.428 0.052      1.327    1.427\nPrecision for the Gaussian observations[2] 1.029 0.050      0.935    1.028\nPrecision for the Gaussian observations[3] 2.832 0.259      2.350    2.823\nBeta for beta.sbp                          0.112 0.049      0.014    0.113\n                                           0.975quant mode\nalpha parameter for weibullsurv                 1.530   NA\nPrecision for the Gaussian observations[2]      1.130   NA\nPrecision for the Gaussian observations[3]      3.372   NA\nBeta for beta.sbp                               0.209   NA\n\nMarginal log-Likelihood:  -28337.38 \n is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n```\n:::\n\n```{.r .cell-code}\n#saveRDS(inla.res, \"PaperA_ME_and_missing_data/data/KB_inla_res1b.rds\")\n\nview_relevant(model_bloodpressure1, \"Repeated measurement\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRepeated measurement \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mean    sd 0.025quant 0.5quant 0.975quant mode\nBeta for beta.sbp 0.112 0.049      0.014    0.113      0.209   NA\nbeta.sex          0.490 0.095      0.306    0.489      0.679   NA\nbeta.age          0.871 0.059      0.755    0.871      0.986   NA\nbeta.smoke        0.263 0.100      0.065    0.264      0.456   NA\nbeta.diabetes     0.502 0.112      0.278    0.503      0.716   NA\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n# ME model with missingness in SBP1 and SBP2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2 <- subset(mydata, is.na(smoke) == FALSE)\nn <- nrow(data2)\n\n# Specifying Y object\nsurv.time <- c(data2$t, rep(NA, 3*n))\nevent <- c(data2$d, rep(NA, 3*n))\nY.surv <- inla.surv(surv.time/10, event)\nY.expos.sbp <- c(rep(NA, n), rep(0, n), rep(NA, 2*n))\nY.err.sbp <- c(rep(NA, 2*n), data2$sbp1, data2$sbp2) # Use all available data\nY <- list(Y.surv, Y.expos.sbp, Y.err.sbp)\n\nbeta.0 <- c(rep(1, n), rep(NA, 3*n))\nbeta.sbp <- c(1:n, rep(NA, 3*n))\nbeta.sex <- c(data2$sex, rep(NA, 3*n))\nbeta.age <- c(data2$age, rep(NA, 3*n))\nbeta.smoke <- c(data2$smoke, rep(NA, 3*n))\nbeta.diabetes <- c(data2$diabetes, rep(NA, 3*n))\n\n# Insert NAs in last model where w is NA\ntt <- 1:n\ntt[is.na(data2$sbp2)] <- NA\nbeta.sbp.copy <- c(rep(NA, n), 1:n, 1:n, tt)\nweight.sbp <- c(rep(NA, n), rep(-1, n), rep(1, 2*n))\n\nalpha.0 <- c(rep(NA, n), rep(1, n), rep(NA, 2*n))\nalpha.sex <- c(rep(NA, n), data2$sex, rep(NA, 2*n))\nalpha.age <- c(rep(NA, n), data2$age, rep(NA, 2*n))\nalpha.smoke <- c(rep(NA, n), data2$smoke, rep(NA, 2*n))\nalpha.diabetes <- c(rep(NA, n), data2$diabetes, rep(NA, 2*n))\n\nScale <- c(rep(1, 4*n) )\n\ndd <- list(Y = Y,\n           beta.0 = beta.0,\n           beta.sbp = beta.sbp,\n           beta.sex = beta.sex,\n           beta.age = beta.age,\n           beta.smoke = beta.smoke,\n           beta.diabetes = beta.diabetes,\n           beta.sbp.copy = beta.sbp.copy,\n           weight.sbp = weight.sbp,\n           alpha.0 = alpha.0,\n           alpha.sex = alpha.sex,\n           alpha.age = alpha.age,\n           alpha.smoke = alpha.smoke,\n           alpha.diabetes = alpha.diabetes,\n           Scale = Scale)\n\n# INLA formula with copy option\nformula = Y ~ beta.0 - 1 +\n  f(beta.sbp.copy, weight.sbp, model=\"iid\", values = 1:n,\n    hyper = list(prec = list(initial = -15, fixed=TRUE))) +\n  f(beta.sbp, copy=\"beta.sbp.copy\",\n    hyper = list(beta = list(param = prior.beta, fixed=FALSE))) +\n  beta.sex + beta.age + beta.smoke + beta.diabetes +\n  alpha.0 + alpha.sex + alpha.age + alpha.smoke + alpha.diabetes\n\nmodel_bloodpressure <- inla(formula, data = dd,\n                 family = c(\"weibull.surv\", \"gaussian\", \"gaussian\"),\n                 control.family = list(\n                   list(hyper = list(alpha = list(param = prior.exp,\n                                                  initial = log(exp.init),\n                                                  fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.x),\n                                                 param = prior.prec.x,\n                                                 fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.u),\n                                                 param = prior.prec.u,\n                                                 fixed = FALSE)))\n                 ),\n                 control.predictor=list(link=3),\n                 scale = Scale,\n                 control.fixed = list(\n                   mean = list(beta.0 = prior.beta[1],\n                               beta.sex = prior.beta[1],\n                               beta.age = prior.beta[1],\n                               beta.smoke = prior.beta[1],\n                               beta.diabetes = prior.beta[1],\n                               alpha.0 = prior.alpha[1],\n                               alpha.sex = prior.alpha[1],\n                               alpha.age = prior.alpha[1],\n                               alpha.smoke = prior.alpha[1],\n                               alpha.diabetes = prior.alpha[1]),\n                   prec = list(beta.0 = prior.beta[2],\n                               beta.sex = prior.beta[2],\n                               beta.age = prior.beta[2],\n                               beta.smoke = prior.beta[2],\n                               beta.diabetes = prior.beta[2],\n                               alpha.0 = prior.alpha[2],\n                               alpha.sex = prior.alpha[2],\n                               alpha.age = prior.alpha[2],\n                               alpha.smoke = prior.alpha[2],\n                               alpha.diabetes = prior.alpha[2])),\n                 verbose=F)\nsummary(model_bloodpressure)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n   c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \n   \", \" data = data, quantiles = quantiles, E = E, offset = offset, \", \" \n   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \n   \", \" lp.scale = lp.scale, link.covariates = link.covariates, verbose = \n   verbose, \", \" lincomb = lincomb, selection = selection, control.compute \n   = control.compute, \", \" control.predictor = control.predictor, \n   control.family = control.family, \", \" control.inla = control.inla, \n   control.fixed = control.fixed, \", \" control.mode = control.mode, \n   control.expert = control.expert, \", \" control.hazard = control.hazard, \n   control.lincomb = control.lincomb, \", \" control.update = \n   control.update, control.lp.scale = control.lp.scale, \", \" \n   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, \n   \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = \n   num.threads, \", \" blas.num.threads = blas.num.threads, keep = keep, \n   working.directory = working.directory, \", \" silent = silent, inla.mode \n   = inla.mode, safe = FALSE, debug = debug, \", \" .parent.frame = \n   .parent.frame)\") \nTime used:\n    Pre = 3.92, Running = 8.66, Post = 0.145, Total = 12.7 \nFixed effects:\n                 mean    sd 0.025quant 0.5quant 0.975quant mode kld\nbeta.0         -2.280 0.080     -2.439   -2.279     -2.125   NA   0\nbeta.sex        0.444 0.079      0.291    0.444      0.601   NA   0\nbeta.age        0.906 0.050      0.808    0.906      1.004   NA   0\nbeta.smoke      0.272 0.085      0.104    0.272      0.436   NA   0\nbeta.diabetes   0.595 0.093      0.409    0.596      0.775   NA   0\nalpha.0         0.006 0.043     -0.078    0.006      0.091   NA   0\nalpha.sex      -0.062 0.047     -0.154   -0.062      0.030   NA   0\nalpha.age       0.323 0.030      0.265    0.323      0.381   NA   0\nalpha.smoke     0.005 0.051     -0.094    0.005      0.104   NA   0\nalpha.diabetes  0.138 0.062      0.016    0.138      0.260   NA   0\n\nRandom effects:\n  Name\t  Model\n    beta.sbp.copy IID model\n   beta.sbp Copy\n\nModel hyperparameters:\n                                            mean    sd 0.025quant 0.5quant\nalpha parameter for weibullsurv            1.379 0.042      1.296    1.379\nPrecision for the Gaussian observations[2] 1.029 0.050      0.934    1.028\nPrecision for the Gaussian observations[3] 2.826 0.260      2.346    2.814\nBeta for beta.sbp                          0.114 0.049      0.018    0.114\n                                           0.975quant mode\nalpha parameter for weibullsurv                  1.46   NA\nPrecision for the Gaussian observations[2]       1.13   NA\nPrecision for the Gaussian observations[3]       3.37   NA\nBeta for beta.sbp                                0.21   NA\n\nMarginal log-Likelihood:  -35207.93 \n is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n```\n:::\n\n```{.r .cell-code}\n#saveRDS(inla.res2, \"PaperA_ME_and_missing_data/data/KB_inla_res2.rds\")\n\nview_relevant(model_bloodpressure, \"Repeated measurement\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRepeated measurement \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mean    sd 0.025quant 0.5quant 0.975quant mode\nBeta for beta.sbp 0.114 0.049      0.018    0.114      0.210   NA\nbeta.sex          0.444 0.079      0.291    0.444      0.601   NA\nbeta.age          0.906 0.050      0.808    0.906      1.004   NA\nbeta.smoke        0.272 0.085      0.104    0.272      0.436   NA\nbeta.diabetes     0.595 0.093      0.409    0.596      0.775   NA\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n# Look at all models\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres.naive <- readRDS(\"PaperA_ME_and_missing_data/data/KB_inla_res0.rds\")\nres.singlemes <- readRDS(\"PaperA_ME_and_missing_data/data/KB_inla_res1a.rds\")\nres.repmeas <- readRDS(\"PaperA_ME_and_missing_data/data/KB_inla_res1b.rds\")\nres.complbp <- readRDS(\"PaperA_ME_and_missing_data/data/KB_inla_res2.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Corresponds to Naive?\nview_relevant(res.naive, \"Naive model\")\n# No corresponding model in KB\nview_relevant(res.singlemes, \"Single SBP measurement (only complete cases of SBP1 and smoking)\")\n# Corresponds to Bayes^c?\nview_relevant(res.repmeas, \"Repeated SBP measurement (only complete cases of SBP1 and smoking)\")\n# Would correspond to Bayes^d if we had exposure model for smoking\nview_relevant(res.complbp, \"Missingness in both SBP measurements (only complete cases of smoking)\")\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}