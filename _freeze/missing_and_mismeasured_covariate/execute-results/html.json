{
  "hash": "5a8cfc062b81e79dcf9b1eae98b3dcc8",
  "result": {
    "markdown": "---\ntitle: \"Missing and mismeasured covariate\"\nexecute: \n  freeze: true\nknitr:\n  opts_chunk: \n    message: false\n---\n\n\n\n\nThe data for this example is originally from the Third National Health and Nutrition Survey (NHANES III), but we use the data as pre-processed and provided by Bartlett and Keogh (2018). They linked the NHANES III data to data from the US National Death Index, with information about the mortality status of each participant in 2011. Following Keogh and Bartlett (2021), we consider a Weibull survival model with continuous covariates systolic blood pressure (SBP) and age, and binary covariates diabetes status, sex and smoking status. The response is time until death by cardiovascular disease. Deaths by other causes are treated as censorings. \n\nMeasurements of SBP are known to vary substantially within the same patient, and it is therefore measured twice for some participants, enabling us to estimate the variance of the error. However, for some participants there is only one measurement, and for others the SBP is completely missing. Note that the smoking status is also missing for around half of the participants, but since we only consider continuous ME, all observations with missingness in the (binary) smoking status are removed for this illustrative example, resulting in $n = 3433$ observations. \n\nTo read more about how the Weibull hazard model is used in INLA in general, the [documentation](https://inla.r-inla-download.org/r-inla.org/doc/likelihood/weibull.pdf) is very helpful.\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survival)   # Survival modelling\nlibrary(INLA)       # Modelling\nlibrary(tidyverse)  # Data wrangling and visualisation\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninla.setOption(num.threads = \"1:1\")\n```\n:::\n\n\nFunction for looking at relevant posterior estimates:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nview_relevant <- function(INLA_res, model_name){\n  fixed <- INLA_res$summary.fixed[c(\"mean\", \"0.025quant\", \"0.975quant\")]\n  hyper <- INLA_res$summary.hyperpar[c(\"mean\", \"0.025quant\", \"0.975quant\")]\n  relevant <- c(\"beta.age\", \"beta.diabetes\", \"beta.sex\", \"beta.smoke\")\n  \n  cat(model_name, \"\\n\")\n  beta.x <- hyper[nrow(hyper), ]\n  rownames(beta.x) <- \"beta.sbp\"\n  rbind(beta.x, fixed[relevant, ])\n}\n```\n:::\n\n\n## Setting up the data\n\nWe load the data, and take a look at the first observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_data <- read.csv(\"data/bloodpressure.csv\")\nhead(full_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  X sbp1 sbp2 sex  age smoke diabetes d         t\n1 1   NA   NA   0 -0.3    NA        0 0 20.833336\n2 2  1.8   NA   0  1.2    NA        1 0  3.250000\n3 3  0.5   NA   0 -0.4    NA        1 0 20.416664\n4 4   NA   NA   1  0.0     1        0 0  4.083336\n5 5  0.5   NA   1 -0.7     1        0 0 12.000000\n6 6 -0.1   NA   1 -1.0     1        0 0 21.166664\n```\n:::\n:::\n\n\nAs mentioned, we only consider measurement error and missing data in continuous covariates, so we remove the observations that have no recorded smoking status.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- full_data %>% drop_na(smoke)\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   X sbp1 sbp2 sex  age smoke diabetes d         t\n1  4   NA   NA   1  0.0     1        0 0  4.083336\n2  5  0.5   NA   1 -0.7     1        0 0 12.000000\n3  6 -0.1   NA   1 -1.0     1        0 0 21.166664\n4 10  1.9   NA   1  2.0     0        0 0  3.250000\n5 13  1.1  0.3   1  0.2     0        0 0 13.666664\n6 14   NA   NA   0  0.7     0        0 1  5.833336\n```\n:::\n:::\n\n\n\n## Complete case Bayesian analysis using INLA\n\nAs a baseline model to compare to the later models, we do a complete case analysis. For this naive analysis, only the observations that have a recorded `sbp1` measurement are used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nccdata <- data %>% drop_na(sbp1)\nn <- nrow(ccdata)\nhead(ccdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   X sbp1 sbp2 sex  age smoke diabetes d        t\n1  5  0.5   NA   1 -0.7     1        0 0 12.00000\n2  6 -0.1   NA   1 -1.0     1        0 0 21.16666\n3 10  1.9   NA   1  2.0     0        0 0  3.25000\n4 13  1.1  0.3   1  0.2     0        0 0 13.66666\n5 15  0.8   NA   1  1.4     0        0 0  2.75000\n6 16 -0.6   NA   1 -0.1     0        0 0  2.50000\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note: JAGS and INLA use the same Weibull parameterization\n# (provided \"variant\" = 0 in INLA)\n\nformula.naive <- inla.surv(t/10, d) ~ sbp1 + sex + age + smoke + diabetes\n\nmodel_naive <- inla(formula.naive,\n                    family =\"weibullsurv\",\n                    data = ccdata,\n                    control.family = list(list(variant = 0)))\n\ncat(\"Naive model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNaive model\n```\n:::\n\n```{.r .cell-code}\nmodel_naive$summary.fixed[c(\"mean\", \"0.025quant\", \"0.975quant\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                  mean  0.025quant 0.975quant\n(Intercept) -2.3611508 -2.55027441 -2.1786506\nsbp1         0.0852421  0.01318898  0.1560199\nsex          0.4872863  0.30313969  0.6759058\nage          0.8762591  0.76273395  0.9894474\nsmoke        0.2621554  0.06417933  0.4554144\ndiabetes     0.5032389  0.27969458  0.7178608\n```\n:::\n:::\n\n\n\n## Measurement error models in INLA\n\nNext, we fit two measurement error models, first using only the complete cases for SBP1 (i.e, the same data set as for the previous complete case analysis), and next a measurement error model that uses all the SBP measurements, and thus both adjusts for the measurement error and the missingness. \n\n### Specifying priors (used in both ME models)\nThe priors are set up the same way as in Keogh and Bartlett (2018).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Priors for measurement error variance and true x-value\nprior.prec.u <- c(0.5, 0.5) # Gamma(0.5, 0.5) (same as Keogh&Bartlett)\nprior.prec.x <- c(0.5, 0.5) # Gamma(0.5, 0.5) (same as K&B)\n#prec.u = 1/sigma_uu\nprec.u <- 2.8\nprec.x = 1\n\n#curve(dgamma(x, shape = 0.5, rate = 0.5))\n\n# Priors for exposure model coefficients\nprior.alpha <- c(0, 1/10000) # N(0, 10^4) (same as K&B)\n\n# Priors for model of interest coefficients\nprior.beta = c(0, 1/1000) # This has a Gaussian prior\n# (K&B specify prior -beta/r ~ N(0,10^6). Since r has prior Exp(0.001),\n# the expected value of r is 1000, and so if we fix this,\n# we can use prior beta ~ N(0, 1000).)\n\n# Prior for shape parameter of the Weibull survival model\nprior.exp <- 0.01 # Gamma(1, 0.001) ~ Exp(0.001) (INLA sets prior on theta, r~Exp(0.1*theta))\nexp.init <- 1.4\n```\n:::\n\n\n\n### ME model ignoring missing observations\n\nFirst we fit a model to account for the measurement error, using only the complete cases for SBP1. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- nrow(ccdata)\n\n# Specifying Y object\nsurv.time <- c(ccdata$t, rep(NA, 3*n))\nevent <- c(ccdata$d, rep(NA, 3*n))\nY.surv <- inla.surv(surv.time/10, event)\nY.expos.sbp <- c(rep(NA, n), rep(0, n), rep(NA, 2*n))\nY.err.sbp <- c(rep(NA, 2*n), ccdata$sbp1, ccdata$sbp2) # Use all available data\nY <- list(Y.surv, Y.expos.sbp, Y.err.sbp)\n\nbeta.0 <- c(rep(1, n), rep(NA, 3*n))\nbeta.sbp <- c(1:n, rep(NA, 3*n))\nbeta.sex <- c(ccdata$sex, rep(NA, 3*n))\nbeta.age <- c(ccdata$age, rep(NA, 3*n))\nbeta.smoke <- c(ccdata$smoke, rep(NA, 3*n))\nbeta.diabetes <- c(ccdata$diabetes, rep(NA, 3*n))\n\n# Insert NAs in last model where w is NA\ntt <- 1:n\ntt[is.na(ccdata$sbp2)] <- NA\nbeta.sbp.copy <- c(rep(NA, n), 1:n, 1:n, tt)\nweight.sbp <- c(rep(NA, n), rep(-1, n), rep(1, 2*n))\n\nalpha.0 <- c(rep(NA, n), rep(1, n), rep(NA, 2*n))\nalpha.sex <- c(rep(NA, n), ccdata$sex, rep(NA, 2*n))\nalpha.age <- c(rep(NA, n), ccdata$age, rep(NA, 2*n))\nalpha.smoke <- c(rep(NA, n), ccdata$smoke, rep(NA, 2*n))\nalpha.diabetes <- c(rep(NA, n), ccdata$diabetes, rep(NA, 2*n))\n\nScale <- c(rep(1, 4*n) )\n\nmat1 <- list(Y = Y,\n           beta.0 = beta.0,\n           beta.sbp = beta.sbp,\n           beta.sex = beta.sex,\n           beta.age = beta.age,\n           beta.smoke = beta.smoke,\n           beta.diabetes = beta.diabetes,\n           beta.sbp.copy = beta.sbp.copy,\n           weight.sbp = weight.sbp,\n           alpha.0 = alpha.0,\n           alpha.sex = alpha.sex,\n           alpha.age = alpha.age,\n           alpha.smoke = alpha.smoke,\n           alpha.diabetes = alpha.diabetes,\n           Scale = Scale)\n```\n:::\n\n\nThe formula is set up as described in [Simulation example](Simulation_example.qmd) (except that there we also had a term for the Berkson ME, which we don't have here).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# INLA formula with copy option\nformula1 <- Y ~ beta.0 - 1 +\n  f(beta.sbp.copy, weight.sbp, model=\"iid\", values = 1:n,\n    hyper = list(prec = list(initial = -15, fixed=TRUE))) +\n  f(beta.sbp, copy=\"beta.sbp.copy\",\n    hyper = list(beta = list(param = prior.beta, fixed=FALSE))) +\n  beta.sex + beta.age + beta.smoke + beta.diabetes +\n  alpha.0 + alpha.sex + alpha.age + alpha.smoke + alpha.diabetes\n```\n:::\n\n\nThe model is then fit.\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- inla(formula1, data = mat1,\n                 family = c(\"weibull.surv\", \"gaussian\", \"gaussian\"),\n                 control.family = list(\n                   list(hyper = list(alpha = list(param = prior.exp,\n                                                  initial = log(exp.init),\n                                                  fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.x),\n                                                 param = prior.prec.x,\n                                                 fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.u),\n                                                 param = prior.prec.u,\n                                                 fixed = FALSE)))\n                 ),\n                 control.predictor=list(link=3),\n                 scale = Scale,\n                 control.fixed = list(\n                   mean = list(beta.0 = prior.beta[1],\n                               beta.sex = prior.beta[1],\n                               beta.age = prior.beta[1],\n                               beta.smoke = prior.beta[1],\n                               beta.diabetes = prior.beta[1],\n                               alpha.0 = prior.alpha[1],\n                               alpha.sex = prior.alpha[1],\n                               alpha.age = prior.alpha[1],\n                               alpha.smoke = prior.alpha[1],\n                               alpha.diabetes = prior.alpha[1]),\n                   prec = list(beta.0 = prior.beta[2],\n                               beta.sex = prior.beta[2],\n                               beta.age = prior.beta[2],\n                               beta.smoke = prior.beta[2],\n                               beta.diabetes = prior.beta[2],\n                               alpha.0 = prior.alpha[2],\n                               alpha.sex = prior.alpha[2],\n                               alpha.age = prior.alpha[2],\n                               alpha.smoke = prior.alpha[2],\n                               alpha.diabetes = prior.alpha[2])))\n\nview_relevant(model1, \"Repeated measurement\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRepeated measurement \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mean 0.025quant 0.975quant\nbeta.sbp      0.1121153 0.01386680  0.2082771\nbeta.age      0.8716486 0.75627658  0.9866010\nbeta.diabetes 0.5019704 0.27834125  0.7167173\nbeta.sex      0.4903540 0.30615108  0.6789968\nbeta.smoke    0.2631645 0.06519664  0.4564406\n```\n:::\n:::\n\n\n### ME model with missingness in SBP1 and SBP2\nOur full measurement error model account for both the measurement error in the blood pressure measurement, as well as the missingness. \n\nWe begin by setting up the matrices that define the model structure. Note that we transform the survival time to avoid numerical issues. \n\n::: {.cell}\n\n```{.r .cell-code}\nn <- nrow(data)\n\n# Specifying Y object\nsurv.time <- c(data$t, rep(NA, 3*n))\nevent <- c(data$d, rep(NA, 3*n))\nY.surv <- inla.surv(surv.time/10, event)\nY.expos.sbp <- c(rep(NA, n), rep(0, n), rep(NA, 2*n))\nY.err.sbp <- c(rep(NA, 2*n), data$sbp1, data$sbp2) # Use all available data\nY <- list(Y.surv, Y.expos.sbp, Y.err.sbp)\n\nbeta.0 <- c(rep(1, n), rep(NA, 3*n))\nbeta.sbp <- c(1:n, rep(NA, 3*n))\nbeta.sex <- c(data$sex, rep(NA, 3*n))\nbeta.age <- c(data$age, rep(NA, 3*n))\nbeta.smoke <- c(data$smoke, rep(NA, 3*n))\nbeta.diabetes <- c(data$diabetes, rep(NA, 3*n))\n\n# Insert NAs in last model where w is NA\ntt <- 1:n\ntt[is.na(data$sbp2)] <- NA\nbeta.sbp.copy <- c(rep(NA, n), 1:n, 1:n, tt)\nweight.sbp <- c(rep(NA, n), rep(-1, n), rep(1, 2*n))\n\nalpha.0 <- c(rep(NA, n), rep(1, n), rep(NA, 2*n))\nalpha.sex <- c(rep(NA, n), data$sex, rep(NA, 2*n))\nalpha.age <- c(rep(NA, n), data$age, rep(NA, 2*n))\nalpha.smoke <- c(rep(NA, n), data$smoke, rep(NA, 2*n))\nalpha.diabetes <- c(rep(NA, n), data$diabetes, rep(NA, 2*n))\n\nScale <- c(rep(1, 4*n) )\n\nmat2 <- list(Y = Y,\n           beta.0 = beta.0,\n           beta.sbp = beta.sbp,\n           beta.sex = beta.sex,\n           beta.age = beta.age,\n           beta.smoke = beta.smoke,\n           beta.diabetes = beta.diabetes,\n           beta.sbp.copy = beta.sbp.copy,\n           weight.sbp = weight.sbp,\n           alpha.0 = alpha.0,\n           alpha.sex = alpha.sex,\n           alpha.age = alpha.age,\n           alpha.smoke = alpha.smoke,\n           alpha.diabetes = alpha.diabetes,\n           Scale = Scale)\n```\n:::\n\n\nThe formula is the same as above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# INLA formula with copy option\nformula2 <- Y ~ beta.0 - 1 +\n  f(beta.sbp.copy, weight.sbp, model=\"iid\", values = 1:n,\n    hyper = list(prec = list(initial = -15, fixed=TRUE))) +\n  f(beta.sbp, copy=\"beta.sbp.copy\",\n    hyper = list(beta = list(param = prior.beta, fixed=FALSE))) +\n  beta.sex + beta.age + beta.smoke + beta.diabetes +\n  alpha.0 + alpha.sex + alpha.age + alpha.smoke + alpha.diabetes\n```\n:::\n\n\nThe model is then fit.\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_bloodpressure <- inla(formula2, data = mat2,\n                 family = c(\"weibull.surv\", \"gaussian\", \"gaussian\"),\n                 control.family = list(\n                   list(hyper = list(alpha = list(param = prior.exp,\n                                                  initial = log(exp.init),\n                                                  fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.x),\n                                                 param = prior.prec.x,\n                                                 fixed = FALSE))),\n                   list(hyper = list(prec = list(initial = log(prec.u),\n                                                 param = prior.prec.u,\n                                                 fixed = FALSE)))\n                 ),\n                 control.predictor=list(link=3),\n                 scale = Scale,\n                 control.fixed = list(\n                   mean = list(beta.0 = prior.beta[1],\n                               beta.sex = prior.beta[1],\n                               beta.age = prior.beta[1],\n                               beta.smoke = prior.beta[1],\n                               beta.diabetes = prior.beta[1],\n                               alpha.0 = prior.alpha[1],\n                               alpha.sex = prior.alpha[1],\n                               alpha.age = prior.alpha[1],\n                               alpha.smoke = prior.alpha[1],\n                               alpha.diabetes = prior.alpha[1]),\n                   prec = list(beta.0 = prior.beta[2],\n                               beta.sex = prior.beta[2],\n                               beta.age = prior.beta[2],\n                               beta.smoke = prior.beta[2],\n                               beta.diabetes = prior.beta[2],\n                               alpha.0 = prior.alpha[2],\n                               alpha.sex = prior.alpha[2],\n                               alpha.age = prior.alpha[2],\n                               alpha.smoke = prior.alpha[2],\n                               alpha.diabetes = prior.alpha[2])))\n\nview_relevant(model_bloodpressure, \"Repeated measurement\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRepeated measurement \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mean 0.025quant 0.975quant\nbeta.sbp      0.1143296 0.01809562  0.2098860\nbeta.age      0.9062324 0.80813899  1.0039959\nbeta.diabetes 0.5949565 0.40939702  0.7746122\nbeta.sex      0.4443801 0.29083679  0.6006210\nbeta.smoke    0.2717879 0.10401999  0.4363125\n```\n:::\n:::\n\n\n\n## Looking at all the models\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nNaive model\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                  mean  0.025quant 0.975quant\n(Intercept) -2.3611508 -2.55027441 -2.1786506\nsbp1         0.0852421  0.01318898  0.1560199\nsex          0.4872863  0.30313969  0.6759058\nage          0.8762591  0.76273395  0.9894474\nsmoke        0.2621554  0.06417933  0.4554144\ndiabetes     0.5032389  0.27969458  0.7178608\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nAdjusts for ME, but only complete cases for SBP1 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mean 0.025quant 0.975quant\nbeta.sbp      0.1121153 0.01386680  0.2082771\nbeta.age      0.8716486 0.75627658  0.9866010\nbeta.diabetes 0.5019704 0.27834125  0.7167173\nbeta.sex      0.4903540 0.30615108  0.6789968\nbeta.smoke    0.2631645 0.06519664  0.4564406\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nMissingness in both SBP measurements (only complete cases of smoking) \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mean 0.025quant 0.975quant\nbeta.sbp      0.1143296 0.01809562  0.2098860\nbeta.age      0.9062324 0.80813899  1.0039959\nbeta.diabetes 0.5949565 0.40939702  0.7746122\nbeta.sex      0.4443801 0.29083679  0.6006210\nbeta.smoke    0.2717879 0.10401999  0.4363125\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell fig.showtext='true'}\n::: {.cell-output-display}\n![](missing_and_mismeasured_covariate_files/figure-html/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\nIf we compare this to the results from Keogh and Bartlett (2021) (see Figure 2 in their paper), our \"Complete case naive\" corresponds to their \"Naive\", and our \"ME adjusted complete case\" corresponds to their \"Bayes^c\". Our \"ME adjusted and imputation does not quite correspond to their \"Bayes^d\", since they also include an imputation model for smoking in their final model, which we do not. \nThe results for the two models that are comparable are almost identical. \n\n\n\n## References\n\nBartlett, J. W. and Keogh, R. H. (2018). Bayesian correction for covariate measurement error: A frequentist evaluation and comparison with regression calibration. *Statistical Methods in Medical Research*, 27(6):1695–1708.\n\nKeogh, R. H. and Bartlett, J. W. (2021). Measurement error as a missing data problem. In *Handbook of Measurement Error Models*, Chapman & Hall/CRC Handbooks of Modern Statistical Methods, pages 429–452. CRC Press. Available as preprint, arXiv:1910.06443.",
    "supporting": [
      "missing_and_mismeasured_covariate_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}